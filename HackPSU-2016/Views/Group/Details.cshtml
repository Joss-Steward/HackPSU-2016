@model HackPSU_2016.Models.Group
@{
    ViewBag.Title = Model.Name;
}

<div class="row">
    <div class="two columns GroupLogo">
        <div></div>
    </div>
    <div class="ten columns GroupInfo">
        <div class="row GroupName">
            Group Name
        </div>
        <div class="row GroupDescription">
            Group DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup DescriptionGroup Description
        </div>
    </div>
</div>

<div class="row GroupData">
    <div class="eight columns PlayerChat">
        <div class="row">
            Chat Window
        </div>
        <div class="row ChatContain" id="chat">
            @foreach(var c in Model.ChatMessages.OrderByDescending(c => c.MessageTime).Take(10)) { 
                <div class="row" style="color: white;">
                    <div class="twelve columns">
                        <span></span>
                        @c.Sender.UserName : @c.MessageText
                    </div>
                </div>
            }
        </div>
        <div class="ChatInputContain">
            <input type="text" id="message" />
            <input type="button" id="sendmessage" value="Send" />
        </div>
    </div>
    <div class="four columns PlayerList">
        @foreach(var u in Model.Members.Select(m => m.User)) { 
            <div class="row">            
                <div class="twelve columns">
                    <span></span>
                    @u.UserName
                </div>
            </div>
        } 
    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.groupChatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addChatMessage = function (groupid, name, message) {
                if(groupid == @Model.GroupId) {
                    // Add the message to the page.
                    $('#chat').append('<div class="row" style="color: white;"><div class="twelve columns"><span></span>'
                        + htmlEncode(name)
                        + ': ' + htmlEncode(message) + '</div></div>');
                }
            };
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.sendChatMessage(@Model.GroupId, $('#message').val());
 
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}